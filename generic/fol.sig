/* ========================================================================= */
/* Predicate logic.                                                          */
/* ========================================================================= */

sig fol.

accum_sig lib.

/* ------------------------------------------------------------------------- */
/* Term datatypes.                                                           */
/* ------------------------------------------------------------------------- */

kind term type.

type var string -> term.
type fn string -> list term -> term.

type fvt term -> list string -> o.

/* ------------------------------------------------------------------------- */
/* Term evaluation.                                                          */
/* ------------------------------------------------------------------------- */

% termval Func V Tm W.
type termval (string -> list A -> A -> o) ->
             (string -> A -> o) ->
	     term -> A -> o.


/* ------------------------------------------------------------------------- */
/* Term substitution.                                                        */
/* ------------------------------------------------------------------------- */

% tsubst F Tm Tm'.
type tsubst (string -> term -> o) -> term -> term -> o.

/* ------------------------------------------------------------------------- */
/* Formulas.                                                                 */
/* ------------------------------------------------------------------------- */

kind fol type.

type atom string -> term -> fol.
% type atom string -> list term -> fol.
type truth fol.
type and fol -> fol -> fol.
type forall (term -> fol) -> fol.

type fv fol -> list string -> o.

/* ------------------------------------------------------------------------- */
/* Substitution in formulas.                                                 */
/* ------------------------------------------------------------------------- */

% subst F Fm Fm'.
type subst (string -> term -> o) -> fol -> fol -> o.

end
